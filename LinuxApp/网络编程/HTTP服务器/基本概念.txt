HTTP(hypertext transport protocol)
HTTP是一个属于应用层的面向对象的协议。现在WWW中使用的是HTTP/1.1。

HTTP协议简介：
(1)支持客户/服务器模式。
(2)简单快速：客户向服务器请求服务时，只需传送简单的请求方法和路径。请求方法常用的有GET、HEAD、POST。
   每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信
   速度很快。
(3)灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。
(4)无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开
   连接。采用这种方式可以节省传输时间。
(5)无状态：HTTP协议是无状态协议。无状态是指协议对于事物处理没有记忆能力。缺少状态意味着如果后续处理需要
   前面的信息，则它必须重传，这样可能导致每次连接传输的数据量大。

HTTP URL
hhtp(超文本传输协议)是一个基于请求与响应模式的、无状态的、应用层协议，常基于TCP的连接方式，HTTP1.1版本中
给出一种持续连接的机制，绝大多数的Web开发，都是构建在HTTP协议上的Web应用。

HTTP URL的格式如下：
http://host[:"port"][abs_path]
eg: http://192.168.2.102:8080/index.jsp


HTTP发送请求
http请求由三部分组成：分别是：请求行、消息报头、请求正文
(1)请求行以一个方法符号开头，以空格分开，后面跟着请求的URL和协议的版本，格式如下：
[Method] [Request-URL] [HTTP-version] [CRLF]
注:其中Method表示请求方法；Request-URL是一个统一的资源标识符；HTTP-version标识请求HTTP的协议版本；CRLF表示
   回车换行(作为结尾的CRLF外，不允许出现单独的CR或者LF字符);

请求方法如下分类：
GET     请求获取Request-URL所标识的资源
POST    在Request-URL所标识的资源后附加新的数据
HEAD    请求获取由Request-URL所标识的资源的响应的消息报头
PUT     请求服务器存储一个资源，并用Request-URL作为其标识
DELETE  请求服务器删除Request-URL所标识的资源
TRACE   请求服务器回送收到的请求信息，主要用于测试好的诊断
CONNECT 保留将来使用
OPTIONS 请求查询服务器的性能，或者查询与资源相关的选型和需求

HTTP接收响应
http请求由三部分组成：分别是：状态行、消息报头、请求正文
(1)状态行格式如下：
[HTTP-version] [Status-Code] [Reason-Phrase] CRLF

1xx:指示信息--表示请求已被接收，继续处理
2xx:成功--表示请求已被接收、理解、接受
3xx:重定向--要完成请求必须进行更进一步的操作
4xx:客户端错误--请求由语法错误或者无法实现
5xx:服务器端错误--服务器未能实现合法请求

常见的状态代码：
200:OK 请求成功
400:Bad Request 客户端请求由语法错误不能被服务器理解
401:Unauthorized  请求未经授权，这个状态的代码必须和WWW-Authenticate报头域一起使用
403:Forbidden     服务器收到请求，但是拒绝服务
404:Not Found     请求资源不存在，如输入了错误的URL
500:Internal Server Error 服务器发生不可预期错误
503:Server Unavailable    服务器当前不能处理客户端请求，一段时间后可能恢复

报头Header信息








